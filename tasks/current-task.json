{
  "id": "task-005",
  "title": "Add incremental ID to posts and update ordering logic",
  "description": "Implement an incremental integer ID field for posts and modify the ordering system to depend on this sequential ID instead of UUIDs or timestamps",
  "context": "Currently posts use UUID as primary key which doesn't provide natural ordering. Based on the current Post entity in src/entities/post.entity.ts extending BaseEntity with UUID id, we need to add an auto-incrementing integer field (like post_number or sequence_id) to ensure proper chronological ordering of posts. The current PostModel in src/models/post.model.ts orders by 'created_at DESC', but this should be updated to use the incremental ID for more reliable ordering. This involves: 1. Database migration to add incremental ID column to Post entity, 2. Update Post entity to include the new auto-increment field, 3. Modify PostModel.findAll() ordering logic to use incremental ID instead of created_at, 4. Update PostsService ordering logic if needed, 5. Consider impact on existing API responses and ensure backward compatibility, 6. The incremental ID should auto-increment on insert and be used as the primary ordering mechanism for displaying posts in chronological order (newest first typically). Current architecture uses TypeORM with PostgreSQL database and follows modular entity-service-controller pattern.",
  "priority": "medium",
  "status": "in-progress",
  "assignedTo": null,
  "tags": ["database", "migration", "ordering", "entity", "post-management", "incremental-id"],
  "dependencies": [],
  "subtasks": [],
  "estimatedHours": 0,
  "actualHours": 0,
  "createdAt": "2025-08-07T00:00:00.000Z",
  "updatedAt": "2025-08-07T00:00:00.000Z",
  "completedAt": null,
  "dueDate": null,
  "notes": []
}