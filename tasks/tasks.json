[
  {
    "id": "task-006",
    "title": "Save RSS feed publish dates when scraping posts",
    "description": "Implement functionality to capture and store the original publish date from RSS feed entries when scraping posts from RSS feeds",
    "context": "Currently when scraping posts from RSS feeds via LinksService.fetchPosts() in src/services/links.service.ts, we're not capturing the original publish date from the RSS feed entries. The RSS feed entries contain publish date information (pubDate field) that should be stored in the Post entity for better content organization and chronological accuracy. The FeedEntry interface in src/types/content.types.ts already defines pubDate?: Date field and RSSService.extractEntries() in src/services/content/rss.service.ts properly extracts pubDate from RSS entries (line 182: pubDate: item.pubdate || item.date || undefined). However, this publish date is not being passed through to the Post entity when creating new posts. This involves: 1. Update Post entity in src/entities/post.entity.ts to add publish_date field as optional timestamp, 2. Create database migration to add publish_date column to posts table, 3. Update CreatePostDto in src/dtos/post.dto.ts to include optional publish_date field with proper validation, 4. Modify LinksService.fetchPosts() method in src/services/links.service.ts (lines 176-183) to map entry.pubDate to publish_date in CreatePostDto when creating newPosts array, 5. The publish date should come from the RSS feed's pubDate field and be stored as a proper timestamp, allowing for accurate chronological display of posts based on their original publication date rather than scraping date. Current architecture uses TypeORM with PostgreSQL database and follows modular entity-service-controller pattern.",
    "priority": "medium",
    "status": "pending",
    "assignedTo": null,
    "tags": ["rss", "database", "migration", "entity", "post-management", "publish-date", "content-scraping"],
    "dependencies": [],
    "subtasks": [],
    "estimatedHours": 0,
    "actualHours": 0,
    "createdAt": "2025-08-07T00:00:00.000Z",
    "updatedAt": "2025-08-07T00:00:00.000Z",
    "completedAt": null,
    "dueDate": null,
    "notes": []
  }
]